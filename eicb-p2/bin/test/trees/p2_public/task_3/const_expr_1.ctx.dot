digraph {
node [shape=Mrecord, style=filled, fillcolor=white, fontname="Calibri"];
graph [ordering=out, nodesep=0.3, ranksep=1];

# SimpleNode VoidType
node0 [label="VoidType", tooltip="VoidType"]

# DeclarationLiteral main
node1 [shape=box, label="main", fillcolor="#FFC6C6", tooltip="main"]

# SimpleNode IntType
node2 [label="IntType", tooltip="IntType"]

# Literal 3
node3 [shape=box, label="3", fillcolor="#cccccc", tooltip="3"]

# SimpleNode IntLiteral
node4:s -> node3:n
node4 [label="IntLiteral", tooltip="IntLiteral"]

# Literal 1
node5 [shape=box, label="1", fillcolor="#cccccc", tooltip="1"]

# SimpleNode IntLiteral
node6:s -> node5:n
node6 [label="IntLiteral", tooltip="IntLiteral"]

# PortNode Addition
node7:p0:s -> node4:n
node7:p1:s -> node6:n
node7 [label="{Addition|{<p0>Left|<p1>Right}}", tooltip="Addition"]

# PortNode VectorType
node8:p0:s -> node2:n
node8:p1:s -> node7:n
node8 [label="{VectorType|{<p0>ElementType|<p1>Dimension}}", tooltip="VectorType"]

# DeclarationLiteral x
node9 [shape=box, label="x", fillcolor="#EAFDC5", tooltip="x"]

# PortNode VarDecl
node10:p0:s -> node8:n
node10:p1:s -> node9:n
node10 [label="{VarDecl|{<p0>Type|<p1>Name}}", tooltip="VarDecl"]

# PortNode Function
node11:p0:s -> node0:n
node11:p1:s -> node1:n
node11:p3_0:s -> node10:n
node11 [label="{Function|{<p0>ReturnType|<p1>Name|{Parameters|{}}|{Statements|{<p3_0>1}}}}", tooltip="Function"]

# PortNode Module
node12:p1_0:s -> node11:n
node12 [label="{Module|{{Records|{}}|{Functions|{<p1_0>1}}}}", tooltip="Module"]

}
